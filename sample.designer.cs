#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SSPWebUI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PERC_TEST_eCC")]
	public partial class sampleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChecklistTemplateItem(ChecklistTemplateItem instance);
    partial void UpdateChecklistTemplateItem(ChecklistTemplateItem instance);
    partial void DeleteChecklistTemplateItem(ChecklistTemplateItem instance);
    #endregion
		
		public sampleDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PERC_TEST_eCCConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sampleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sampleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sampleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sampleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChecklistTemplateItem> ChecklistTemplateItems
		{
			get
			{
				return this.GetTable<ChecklistTemplateItem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChecklistTemplateItems")]
	public partial class ChecklistTemplateItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ChecklistTemplateItemCkey;
		
		private int _ChecklistTemplateItemKey;
		
		private int _Namespace;
		
		private decimal _ChecklistTemplateVersionCKey;
		
		private string _LocalKey;
		
		private string _LocalDisplayHTMLText;
		
		private string _PrintOutHTMLText;
		
		private string _VisibleRTFText;
		
		private string _EditorComment;
		
		private bool _Phase1ReviewApproval;
		
		private bool _Phase2ReviewApproval;
		
		private bool _Phase3ReviewApproval;
		
		private bool _Phase4ReviewApproval;
		
		private System.Nullable<decimal> _Reviewer1;
		
		private System.Nullable<decimal> _Reviewer2;
		
		private System.Nullable<decimal> _Reviewer3;
		
		private System.Nullable<decimal> _Reviewer4;
		
		private bool _Released;
		
		private string _VisibleText;
		
		private string _LongText;
		
		private string _ReportText;
		
		private System.Nullable<int> _ReportTypeKey;
		
		private System.Nullable<int> _FormatTypeKey;
		
		private string _DescriptionText;
		
		private string _PopUpNoteHTML;
		
		private string _TextAfterConcept;
		
		private string _MetaData;
		
		private string _FSN;
		
		private string _ConceptID;
		
		private string _GID;
		
		private string _GenericConceptID;
		
		private string _LegacyCode;
		
		private System.Nullable<int> _SNOMED_MatchTypeKey;
		
		private bool _SNOMED_NeedsReview;
		
		private System.Nullable<short> _MinRepetitions;
		
		private System.Nullable<short> _MaxRepetitions;
		
		private System.Nullable<int> _ItemTypeKey;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<decimal> _PreviousItemCKey;
		
		private System.Nullable<decimal> _ParentItemCKey;
		
		private decimal _SourceCKey;
		
		private System.Nullable<decimal> _PrevChecklistTemplateItemCkey;
		
		private decimal _OrigChecklistTemplateItemCkey;
		
		private System.Nullable<decimal> _BaseCkey;
		
		private System.Nullable<decimal> _TemplateInjectionCkey;
		
		private System.Nullable<decimal> _SubTreeTemplateInjectionCkey;
		
		private System.Nullable<long> _SNOMEDinjectionCID;
		
		private System.Nullable<int> _AnswerDataTypeKey;
		
		private System.Nullable<int> _AnswerMaxChars;
		
		private System.Nullable<int> _AnswerMaxDecimals;
		
		private System.Nullable<decimal> _AnswerMaxValue;
		
		private System.Nullable<decimal> _AnswerMinValue;
		
		private string _AnswerUnits;
		
		private bool _KeepWithNext;
		
		private bool _AuthorityRequired;
		
		private bool _Required;
		
		private bool _DefaultDisabled;
		
		private bool _Hidden;
		
		private bool _Locked;
		
		private string _DefaultValue;
		
		private string _AuthorityValue;
		
		private bool _SkipConcept;
		
		private System.Nullable<int> _ControlTypeKey;
		
		private string _ControlTip;
		
		private bool _SelectionDisablesChildren;
		
		private bool _SelectionDisablesSiblings;
		
		private System.Nullable<int> _ItemDependencyType;
		
		private string _ItemXValues;
		
		private string _ItemYKeys;
		
		private string _ValidationRule;
		
		private string _ValidationText;
		
		private string _ValidationFunction;
		
		private System.Nullable<int> _NAACCR_ItemNum;
		
		private string _NAACCR_ItemName;
		
		private string _NAACCR_DisplayName;
		
		private string _NAACCR_AnswerValue;
		
		private string _NAACCR_AnswerKey;
		
		private string _NAACCR_AnswerText;
		
		private System.Nullable<decimal> _NAACCR_TempKey;
		
		private string _ExtensionGroup;
		
		private System.Nullable<int> _ComboBoundColumn;
		
		private bool _ComboLimitToList;
		
		private System.Nullable<int> _ComboColumnCount;
		
		private bool _ComboHeader;
		
		private string _ComboHeaderText;
		
		private bool _ComboResizableCols;
		
		private bool _ComboResizableRows;
		
		private System.Nullable<int> _ComboListRows;
		
		private System.Nullable<int> _ComboListWidth;
		
		private bool _ComboAutoExpand;
		
		private string _ComboCol1;
		
		private string _ComboCol2;
		
		private string _ComboCol3;
		
		private string _ComboCol4;
		
		private System.Nullable<int> _ComboCol1Width;
		
		private System.Nullable<int> _ComboCol2Width;
		
		private System.Nullable<int> _ComboCol3Width;
		
		private System.Nullable<int> _ComboCol4Width;
		
		private System.Nullable<int> _LabelHeight;
		
		private System.Nullable<int> _LabelWidth;
		
		private System.Nullable<int> _LabelLeft;
		
		private System.Nullable<int> _LabelTop;
		
		private System.Nullable<int> _LabelBackColor;
		
		private string _LabelBackStyle;
		
		private string _LabelBorderStyle;
		
		private System.Nullable<int> _LabelBorderColor;
		
		private System.Nullable<int> _LabelBorderWidth;
		
		private string _LabelFont;
		
		private bool _LabelFontBold;
		
		private System.Nullable<int> _LabelFontColor;
		
		private bool _LabelFontItalic;
		
		private System.Nullable<decimal> _LabelFontSize;
		
		private bool _LabelFontUnderline;
		
		private string _LabelTextAlign;
		
		private string _ControlDataSource;
		
		private string _ControlRowSource;
		
		private string _ControlRowSourceType;
		
		private string _ControlFormat;
		
		private string _ControlName;
		
		private System.Nullable<int> _ControlHeight;
		
		private System.Nullable<int> _ControlWidth;
		
		private System.Nullable<int> _ControlLeft;
		
		private System.Nullable<int> _ControlTop;
		
		private System.Nullable<int> _ControlBackColor;
		
		private string _ControlBackStyle;
		
		private string _ControlBorderStyle;
		
		private System.Nullable<int> _ControlBorderColor;
		
		private System.Nullable<int> _ControlBorderWidth;
		
		private string _ControlFont;
		
		private bool _ControlFontBold;
		
		private System.Nullable<int> _ControlFontColor;
		
		private bool _ControlFontItalic;
		
		private System.Nullable<decimal> _ControlFontSize;
		
		private bool _ControlFontUnderline;
		
		private string _ControlHelpContextID;
		
		private string _ControlRightClickMenu;
		
		private string _ControlTag;
		
		private bool _ControlTabStop;
		
		private System.Nullable<int> _ControlTabIndex;
		
		private string _ControlTextAlign;
		
		private string _HL7_MSH;
		
		private string _HL7_ORC;
		
		private string _HL7_OBR;
		
		private string _HL7_OBX_3_Qcode;
		
		private string _HL7_OBX_5_ACode;
		
		private string _HL7_OBX_5_1_Text;
		
		private string _LOINC;
		
		private string _ICDO3Morph;
		
		private string _ICDO3Topo;
		
		private string _ICDO3Grade;
		
		private string _ICDO3Behav;
		
		private System.Nullable<int> _ICDO3MatchTypeKey;
		
		private string _ICDO3FullTerm;
		
		private bool _ICDO3NeedsReview;
		
		private string _ICD9;
		
		private string _ICD10;
		
		private string _CPT;
		
		private string _HCPCS;
		
		private string _ATC;
		
		private string _AHFS;
		
		private string _USP;
		
		private string _BeforeUpdate;
		
		private string _AfterUpdate;
		
		private string _OnChange;
		
		private string _OnNotInList;
		
		private string _OnExit;
		
		private string _OnEnter;
		
		private string _OnGotFocus;
		
		private string _OnLostFocus;
		
		private string _OnClick;
		
		private string _OnDblClick;
		
		private string _OnMouseDown;
		
		private string _OnMouseMove;
		
		private string _OnMouseUp;
		
		private string _OnKeyDown;
		
		private string _OnKeyUp;
		
		private string _OnKeyPress;
		
		private string _HelpFile;
		
		private string _HTMLHelp;
		
		private System.Data.Linq.Binary _TS;
		
		private bool _DeprecatedFlag;
		
		private System.Nullable<System.DateTime> _DeprecatedDate;
		
		private string _ShortName;
		
		private EntitySet<ChecklistTemplateItem> _ChecklistTemplateItems;
		
		private EntityRef<ChecklistTemplateItem> _ChecklistTemplateItem3;
		
		private EntitySet<ChecklistTemplateItem> _ChecklistTemplateItems1;
		
		private EntitySet<ChecklistTemplateItem> _ChecklistTemplateItems2;
		
		private EntityRef<ChecklistTemplateItem> _ChecklistTemplateItem1;
		
		private EntityRef<ChecklistTemplateItem> _ChecklistTemplateItem2;
		
		private EntityRef<ChecklistTemplateItem> _ChecklistTemplateItem4;
		
		private EntityRef<ChecklistTemplateItem> _ChecklistTemplateItem5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChecklistTemplateItemCkeyChanging(decimal value);
    partial void OnChecklistTemplateItemCkeyChanged();
    partial void OnChecklistTemplateItemKeyChanging(int value);
    partial void OnChecklistTemplateItemKeyChanged();
    partial void OnNamespaceChanging(int value);
    partial void OnNamespaceChanged();
    partial void OnChecklistTemplateVersionCKeyChanging(decimal value);
    partial void OnChecklistTemplateVersionCKeyChanged();
    partial void OnLocalKeyChanging(string value);
    partial void OnLocalKeyChanged();
    partial void OnLocalDisplayHTMLTextChanging(string value);
    partial void OnLocalDisplayHTMLTextChanged();
    partial void OnPrintOutHTMLTextChanging(string value);
    partial void OnPrintOutHTMLTextChanged();
    partial void OnVisibleRTFTextChanging(string value);
    partial void OnVisibleRTFTextChanged();
    partial void OnEditorCommentChanging(string value);
    partial void OnEditorCommentChanged();
    partial void OnPhase1ReviewApprovalChanging(bool value);
    partial void OnPhase1ReviewApprovalChanged();
    partial void OnPhase2ReviewApprovalChanging(bool value);
    partial void OnPhase2ReviewApprovalChanged();
    partial void OnPhase3ReviewApprovalChanging(bool value);
    partial void OnPhase3ReviewApprovalChanged();
    partial void OnPhase4ReviewApprovalChanging(bool value);
    partial void OnPhase4ReviewApprovalChanged();
    partial void OnReviewer1Changing(System.Nullable<decimal> value);
    partial void OnReviewer1Changed();
    partial void OnReviewer2Changing(System.Nullable<decimal> value);
    partial void OnReviewer2Changed();
    partial void OnReviewer3Changing(System.Nullable<decimal> value);
    partial void OnReviewer3Changed();
    partial void OnReviewer4Changing(System.Nullable<decimal> value);
    partial void OnReviewer4Changed();
    partial void OnReleasedChanging(bool value);
    partial void OnReleasedChanged();
    partial void OnVisibleTextChanging(string value);
    partial void OnVisibleTextChanged();
    partial void OnLongTextChanging(string value);
    partial void OnLongTextChanged();
    partial void OnReportTextChanging(string value);
    partial void OnReportTextChanged();
    partial void OnReportTypeKeyChanging(System.Nullable<int> value);
    partial void OnReportTypeKeyChanged();
    partial void OnFormatTypeKeyChanging(System.Nullable<int> value);
    partial void OnFormatTypeKeyChanged();
    partial void OnDescriptionTextChanging(string value);
    partial void OnDescriptionTextChanged();
    partial void OnPopUpNoteHTMLChanging(string value);
    partial void OnPopUpNoteHTMLChanged();
    partial void OnTextAfterConceptChanging(string value);
    partial void OnTextAfterConceptChanged();
    partial void OnMetaDataChanging(string value);
    partial void OnMetaDataChanged();
    partial void OnFSNChanging(string value);
    partial void OnFSNChanged();
    partial void OnConceptIDChanging(string value);
    partial void OnConceptIDChanged();
    partial void OnGIDChanging(string value);
    partial void OnGIDChanged();
    partial void OnGenericConceptIDChanging(string value);
    partial void OnGenericConceptIDChanged();
    partial void OnLegacyCodeChanging(string value);
    partial void OnLegacyCodeChanged();
    partial void OnSNOMED_MatchTypeKeyChanging(System.Nullable<int> value);
    partial void OnSNOMED_MatchTypeKeyChanged();
    partial void OnSNOMED_NeedsReviewChanging(bool value);
    partial void OnSNOMED_NeedsReviewChanged();
    partial void OnMinRepetitionsChanging(System.Nullable<short> value);
    partial void OnMinRepetitionsChanged();
    partial void OnMaxRepetitionsChanging(System.Nullable<short> value);
    partial void OnMaxRepetitionsChanged();
    partial void OnItemTypeKeyChanging(System.Nullable<int> value);
    partial void OnItemTypeKeyChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnPreviousItemCKeyChanging(System.Nullable<decimal> value);
    partial void OnPreviousItemCKeyChanged();
    partial void OnParentItemCKeyChanging(System.Nullable<decimal> value);
    partial void OnParentItemCKeyChanged();
    partial void OnSourceCKeyChanging(decimal value);
    partial void OnSourceCKeyChanged();
    partial void OnPrevChecklistTemplateItemCkeyChanging(System.Nullable<decimal> value);
    partial void OnPrevChecklistTemplateItemCkeyChanged();
    partial void OnOrigChecklistTemplateItemCkeyChanging(decimal value);
    partial void OnOrigChecklistTemplateItemCkeyChanged();
    partial void OnBaseCkeyChanging(System.Nullable<decimal> value);
    partial void OnBaseCkeyChanged();
    partial void OnTemplateInjectionCkeyChanging(System.Nullable<decimal> value);
    partial void OnTemplateInjectionCkeyChanged();
    partial void OnSubTreeTemplateInjectionCkeyChanging(System.Nullable<decimal> value);
    partial void OnSubTreeTemplateInjectionCkeyChanged();
    partial void OnSNOMEDinjectionCIDChanging(System.Nullable<long> value);
    partial void OnSNOMEDinjectionCIDChanged();
    partial void OnAnswerDataTypeKeyChanging(System.Nullable<int> value);
    partial void OnAnswerDataTypeKeyChanged();
    partial void OnAnswerMaxCharsChanging(System.Nullable<int> value);
    partial void OnAnswerMaxCharsChanged();
    partial void OnAnswerMaxDecimalsChanging(System.Nullable<int> value);
    partial void OnAnswerMaxDecimalsChanged();
    partial void OnAnswerMaxValueChanging(System.Nullable<decimal> value);
    partial void OnAnswerMaxValueChanged();
    partial void OnAnswerMinValueChanging(System.Nullable<decimal> value);
    partial void OnAnswerMinValueChanged();
    partial void OnAnswerUnitsChanging(string value);
    partial void OnAnswerUnitsChanged();
    partial void OnKeepWithNextChanging(bool value);
    partial void OnKeepWithNextChanged();
    partial void OnAuthorityRequiredChanging(bool value);
    partial void OnAuthorityRequiredChanged();
    partial void OnRequiredChanging(bool value);
    partial void OnRequiredChanged();
    partial void OnDefaultDisabledChanging(bool value);
    partial void OnDefaultDisabledChanged();
    partial void OnHiddenChanging(bool value);
    partial void OnHiddenChanged();
    partial void OnLockedChanging(bool value);
    partial void OnLockedChanged();
    partial void OnDefaultValueChanging(string value);
    partial void OnDefaultValueChanged();
    partial void OnAuthorityValueChanging(string value);
    partial void OnAuthorityValueChanged();
    partial void OnSkipConceptChanging(bool value);
    partial void OnSkipConceptChanged();
    partial void OnControlTypeKeyChanging(System.Nullable<int> value);
    partial void OnControlTypeKeyChanged();
    partial void OnControlTipChanging(string value);
    partial void OnControlTipChanged();
    partial void OnSelectionDisablesChildrenChanging(bool value);
    partial void OnSelectionDisablesChildrenChanged();
    partial void OnSelectionDisablesSiblingsChanging(bool value);
    partial void OnSelectionDisablesSiblingsChanged();
    partial void OnItemDependencyTypeChanging(System.Nullable<int> value);
    partial void OnItemDependencyTypeChanged();
    partial void OnItemXValuesChanging(string value);
    partial void OnItemXValuesChanged();
    partial void OnItemYKeysChanging(string value);
    partial void OnItemYKeysChanged();
    partial void OnValidationRuleChanging(string value);
    partial void OnValidationRuleChanged();
    partial void OnValidationTextChanging(string value);
    partial void OnValidationTextChanged();
    partial void OnValidationFunctionChanging(string value);
    partial void OnValidationFunctionChanged();
    partial void OnNAACCR_ItemNumChanging(System.Nullable<int> value);
    partial void OnNAACCR_ItemNumChanged();
    partial void OnNAACCR_ItemNameChanging(string value);
    partial void OnNAACCR_ItemNameChanged();
    partial void OnNAACCR_DisplayNameChanging(string value);
    partial void OnNAACCR_DisplayNameChanged();
    partial void OnNAACCR_AnswerValueChanging(string value);
    partial void OnNAACCR_AnswerValueChanged();
    partial void OnNAACCR_AnswerKeyChanging(string value);
    partial void OnNAACCR_AnswerKeyChanged();
    partial void OnNAACCR_AnswerTextChanging(string value);
    partial void OnNAACCR_AnswerTextChanged();
    partial void OnNAACCR_TempKeyChanging(System.Nullable<decimal> value);
    partial void OnNAACCR_TempKeyChanged();
    partial void OnExtensionGroupChanging(string value);
    partial void OnExtensionGroupChanged();
    partial void OnComboBoundColumnChanging(System.Nullable<int> value);
    partial void OnComboBoundColumnChanged();
    partial void OnComboLimitToListChanging(bool value);
    partial void OnComboLimitToListChanged();
    partial void OnComboColumnCountChanging(System.Nullable<int> value);
    partial void OnComboColumnCountChanged();
    partial void OnComboHeaderChanging(bool value);
    partial void OnComboHeaderChanged();
    partial void OnComboHeaderTextChanging(string value);
    partial void OnComboHeaderTextChanged();
    partial void OnComboResizableColsChanging(bool value);
    partial void OnComboResizableColsChanged();
    partial void OnComboResizableRowsChanging(bool value);
    partial void OnComboResizableRowsChanged();
    partial void OnComboListRowsChanging(System.Nullable<int> value);
    partial void OnComboListRowsChanged();
    partial void OnComboListWidthChanging(System.Nullable<int> value);
    partial void OnComboListWidthChanged();
    partial void OnComboAutoExpandChanging(bool value);
    partial void OnComboAutoExpandChanged();
    partial void OnComboCol1Changing(string value);
    partial void OnComboCol1Changed();
    partial void OnComboCol2Changing(string value);
    partial void OnComboCol2Changed();
    partial void OnComboCol3Changing(string value);
    partial void OnComboCol3Changed();
    partial void OnComboCol4Changing(string value);
    partial void OnComboCol4Changed();
    partial void OnComboCol1WidthChanging(System.Nullable<int> value);
    partial void OnComboCol1WidthChanged();
    partial void OnComboCol2WidthChanging(System.Nullable<int> value);
    partial void OnComboCol2WidthChanged();
    partial void OnComboCol3WidthChanging(System.Nullable<int> value);
    partial void OnComboCol3WidthChanged();
    partial void OnComboCol4WidthChanging(System.Nullable<int> value);
    partial void OnComboCol4WidthChanged();
    partial void OnLabelHeightChanging(System.Nullable<int> value);
    partial void OnLabelHeightChanged();
    partial void OnLabelWidthChanging(System.Nullable<int> value);
    partial void OnLabelWidthChanged();
    partial void OnLabelLeftChanging(System.Nullable<int> value);
    partial void OnLabelLeftChanged();
    partial void OnLabelTopChanging(System.Nullable<int> value);
    partial void OnLabelTopChanged();
    partial void OnLabelBackColorChanging(System.Nullable<int> value);
    partial void OnLabelBackColorChanged();
    partial void OnLabelBackStyleChanging(string value);
    partial void OnLabelBackStyleChanged();
    partial void OnLabelBorderStyleChanging(string value);
    partial void OnLabelBorderStyleChanged();
    partial void OnLabelBorderColorChanging(System.Nullable<int> value);
    partial void OnLabelBorderColorChanged();
    partial void OnLabelBorderWidthChanging(System.Nullable<int> value);
    partial void OnLabelBorderWidthChanged();
    partial void OnLabelFontChanging(string value);
    partial void OnLabelFontChanged();
    partial void OnLabelFontBoldChanging(bool value);
    partial void OnLabelFontBoldChanged();
    partial void OnLabelFontColorChanging(System.Nullable<int> value);
    partial void OnLabelFontColorChanged();
    partial void OnLabelFontItalicChanging(bool value);
    partial void OnLabelFontItalicChanged();
    partial void OnLabelFontSizeChanging(System.Nullable<decimal> value);
    partial void OnLabelFontSizeChanged();
    partial void OnLabelFontUnderlineChanging(bool value);
    partial void OnLabelFontUnderlineChanged();
    partial void OnLabelTextAlignChanging(string value);
    partial void OnLabelTextAlignChanged();
    partial void OnControlDataSourceChanging(string value);
    partial void OnControlDataSourceChanged();
    partial void OnControlRowSourceChanging(string value);
    partial void OnControlRowSourceChanged();
    partial void OnControlRowSourceTypeChanging(string value);
    partial void OnControlRowSourceTypeChanged();
    partial void OnControlFormatChanging(string value);
    partial void OnControlFormatChanged();
    partial void OnControlNameChanging(string value);
    partial void OnControlNameChanged();
    partial void OnControlHeightChanging(System.Nullable<int> value);
    partial void OnControlHeightChanged();
    partial void OnControlWidthChanging(System.Nullable<int> value);
    partial void OnControlWidthChanged();
    partial void OnControlLeftChanging(System.Nullable<int> value);
    partial void OnControlLeftChanged();
    partial void OnControlTopChanging(System.Nullable<int> value);
    partial void OnControlTopChanged();
    partial void OnControlBackColorChanging(System.Nullable<int> value);
    partial void OnControlBackColorChanged();
    partial void OnControlBackStyleChanging(string value);
    partial void OnControlBackStyleChanged();
    partial void OnControlBorderStyleChanging(string value);
    partial void OnControlBorderStyleChanged();
    partial void OnControlBorderColorChanging(System.Nullable<int> value);
    partial void OnControlBorderColorChanged();
    partial void OnControlBorderWidthChanging(System.Nullable<int> value);
    partial void OnControlBorderWidthChanged();
    partial void OnControlFontChanging(string value);
    partial void OnControlFontChanged();
    partial void OnControlFontBoldChanging(bool value);
    partial void OnControlFontBoldChanged();
    partial void OnControlFontColorChanging(System.Nullable<int> value);
    partial void OnControlFontColorChanged();
    partial void OnControlFontItalicChanging(bool value);
    partial void OnControlFontItalicChanged();
    partial void OnControlFontSizeChanging(System.Nullable<decimal> value);
    partial void OnControlFontSizeChanged();
    partial void OnControlFontUnderlineChanging(bool value);
    partial void OnControlFontUnderlineChanged();
    partial void OnControlHelpContextIDChanging(string value);
    partial void OnControlHelpContextIDChanged();
    partial void OnControlRightClickMenuChanging(string value);
    partial void OnControlRightClickMenuChanged();
    partial void OnControlTagChanging(string value);
    partial void OnControlTagChanged();
    partial void OnControlTabStopChanging(bool value);
    partial void OnControlTabStopChanged();
    partial void OnControlTabIndexChanging(System.Nullable<int> value);
    partial void OnControlTabIndexChanged();
    partial void OnControlTextAlignChanging(string value);
    partial void OnControlTextAlignChanged();
    partial void OnHL7_MSHChanging(string value);
    partial void OnHL7_MSHChanged();
    partial void OnHL7_ORCChanging(string value);
    partial void OnHL7_ORCChanged();
    partial void OnHL7_OBRChanging(string value);
    partial void OnHL7_OBRChanged();
    partial void OnHL7_OBX_3_QcodeChanging(string value);
    partial void OnHL7_OBX_3_QcodeChanged();
    partial void OnHL7_OBX_5_ACodeChanging(string value);
    partial void OnHL7_OBX_5_ACodeChanged();
    partial void OnHL7_OBX_5_1_TextChanging(string value);
    partial void OnHL7_OBX_5_1_TextChanged();
    partial void OnLOINCChanging(string value);
    partial void OnLOINCChanged();
    partial void OnICDO3MorphChanging(string value);
    partial void OnICDO3MorphChanged();
    partial void OnICDO3TopoChanging(string value);
    partial void OnICDO3TopoChanged();
    partial void OnICDO3GradeChanging(string value);
    partial void OnICDO3GradeChanged();
    partial void OnICDO3BehavChanging(string value);
    partial void OnICDO3BehavChanged();
    partial void OnICDO3MatchTypeKeyChanging(System.Nullable<int> value);
    partial void OnICDO3MatchTypeKeyChanged();
    partial void OnICDO3FullTermChanging(string value);
    partial void OnICDO3FullTermChanged();
    partial void OnICDO3NeedsReviewChanging(bool value);
    partial void OnICDO3NeedsReviewChanged();
    partial void OnICD9Changing(string value);
    partial void OnICD9Changed();
    partial void OnICD10Changing(string value);
    partial void OnICD10Changed();
    partial void OnCPTChanging(string value);
    partial void OnCPTChanged();
    partial void OnHCPCSChanging(string value);
    partial void OnHCPCSChanged();
    partial void OnATCChanging(string value);
    partial void OnATCChanged();
    partial void OnAHFSChanging(string value);
    partial void OnAHFSChanged();
    partial void OnUSPChanging(string value);
    partial void OnUSPChanged();
    partial void OnBeforeUpdateChanging(string value);
    partial void OnBeforeUpdateChanged();
    partial void OnAfterUpdateChanging(string value);
    partial void OnAfterUpdateChanged();
    partial void OnOnChangeChanging(string value);
    partial void OnOnChangeChanged();
    partial void OnOnNotInListChanging(string value);
    partial void OnOnNotInListChanged();
    partial void OnOnExitChanging(string value);
    partial void OnOnExitChanged();
    partial void OnOnEnterChanging(string value);
    partial void OnOnEnterChanged();
    partial void OnOnGotFocusChanging(string value);
    partial void OnOnGotFocusChanged();
    partial void OnOnLostFocusChanging(string value);
    partial void OnOnLostFocusChanged();
    partial void OnOnClickChanging(string value);
    partial void OnOnClickChanged();
    partial void OnOnDblClickChanging(string value);
    partial void OnOnDblClickChanged();
    partial void OnOnMouseDownChanging(string value);
    partial void OnOnMouseDownChanged();
    partial void OnOnMouseMoveChanging(string value);
    partial void OnOnMouseMoveChanged();
    partial void OnOnMouseUpChanging(string value);
    partial void OnOnMouseUpChanged();
    partial void OnOnKeyDownChanging(string value);
    partial void OnOnKeyDownChanged();
    partial void OnOnKeyUpChanging(string value);
    partial void OnOnKeyUpChanged();
    partial void OnOnKeyPressChanging(string value);
    partial void OnOnKeyPressChanged();
    partial void OnHelpFileChanging(string value);
    partial void OnHelpFileChanged();
    partial void OnHTMLHelpChanging(string value);
    partial void OnHTMLHelpChanged();
    partial void OnTSChanging(System.Data.Linq.Binary value);
    partial void OnTSChanged();
    partial void OnDeprecatedFlagChanging(bool value);
    partial void OnDeprecatedFlagChanged();
    partial void OnDeprecatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeprecatedDateChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    #endregion
		
		public ChecklistTemplateItem()
		{
			this._ChecklistTemplateItems = new EntitySet<ChecklistTemplateItem>(new Action<ChecklistTemplateItem>(this.attach_ChecklistTemplateItems), new Action<ChecklistTemplateItem>(this.detach_ChecklistTemplateItems));
			this._ChecklistTemplateItem3 = default(EntityRef<ChecklistTemplateItem>);
			this._ChecklistTemplateItems1 = new EntitySet<ChecklistTemplateItem>(new Action<ChecklistTemplateItem>(this.attach_ChecklistTemplateItems1), new Action<ChecklistTemplateItem>(this.detach_ChecklistTemplateItems1));
			this._ChecklistTemplateItems2 = new EntitySet<ChecklistTemplateItem>(new Action<ChecklistTemplateItem>(this.attach_ChecklistTemplateItems2), new Action<ChecklistTemplateItem>(this.detach_ChecklistTemplateItems2));
			this._ChecklistTemplateItem1 = default(EntityRef<ChecklistTemplateItem>);
			this._ChecklistTemplateItem2 = default(EntityRef<ChecklistTemplateItem>);
			this._ChecklistTemplateItem4 = default(EntityRef<ChecklistTemplateItem>);
			this._ChecklistTemplateItem5 = default(EntityRef<ChecklistTemplateItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecklistTemplateItemCkey", DbType="Decimal(20,9) NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public decimal ChecklistTemplateItemCkey
		{
			get
			{
				return this._ChecklistTemplateItemCkey;
			}
			set
			{
				if ((this._ChecklistTemplateItemCkey != value))
				{
					if (this._ChecklistTemplateItem2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChecklistTemplateItemCkeyChanging(value);
					this.SendPropertyChanging();
					this._ChecklistTemplateItemCkey = value;
					this.SendPropertyChanged("ChecklistTemplateItemCkey");
					this.OnChecklistTemplateItemCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecklistTemplateItemKey", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ChecklistTemplateItemKey
		{
			get
			{
				return this._ChecklistTemplateItemKey;
			}
			set
			{
				if ((this._ChecklistTemplateItemKey != value))
				{
					this.OnChecklistTemplateItemKeyChanging(value);
					this.SendPropertyChanging();
					this._ChecklistTemplateItemKey = value;
					this.SendPropertyChanged("ChecklistTemplateItemKey");
					this.OnChecklistTemplateItemKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namespace", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Namespace
		{
			get
			{
				return this._Namespace;
			}
			set
			{
				if ((this._Namespace != value))
				{
					this.OnNamespaceChanging(value);
					this.SendPropertyChanging();
					this._Namespace = value;
					this.SendPropertyChanged("Namespace");
					this.OnNamespaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChecklistTemplateVersionCKey", DbType="Decimal(20,9) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal ChecklistTemplateVersionCKey
		{
			get
			{
				return this._ChecklistTemplateVersionCKey;
			}
			set
			{
				if ((this._ChecklistTemplateVersionCKey != value))
				{
					this.OnChecklistTemplateVersionCKeyChanging(value);
					this.SendPropertyChanging();
					this._ChecklistTemplateVersionCKey = value;
					this.SendPropertyChanged("ChecklistTemplateVersionCKey");
					this.OnChecklistTemplateVersionCKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalKey", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LocalKey
		{
			get
			{
				return this._LocalKey;
			}
			set
			{
				if ((this._LocalKey != value))
				{
					this.OnLocalKeyChanging(value);
					this.SendPropertyChanging();
					this._LocalKey = value;
					this.SendPropertyChanged("LocalKey");
					this.OnLocalKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocalDisplayHTMLText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LocalDisplayHTMLText
		{
			get
			{
				return this._LocalDisplayHTMLText;
			}
			set
			{
				if ((this._LocalDisplayHTMLText != value))
				{
					this.OnLocalDisplayHTMLTextChanging(value);
					this.SendPropertyChanging();
					this._LocalDisplayHTMLText = value;
					this.SendPropertyChanged("LocalDisplayHTMLText");
					this.OnLocalDisplayHTMLTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintOutHTMLText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PrintOutHTMLText
		{
			get
			{
				return this._PrintOutHTMLText;
			}
			set
			{
				if ((this._PrintOutHTMLText != value))
				{
					this.OnPrintOutHTMLTextChanging(value);
					this.SendPropertyChanging();
					this._PrintOutHTMLText = value;
					this.SendPropertyChanged("PrintOutHTMLText");
					this.OnPrintOutHTMLTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleRTFText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VisibleRTFText
		{
			get
			{
				return this._VisibleRTFText;
			}
			set
			{
				if ((this._VisibleRTFText != value))
				{
					this.OnVisibleRTFTextChanging(value);
					this.SendPropertyChanging();
					this._VisibleRTFText = value;
					this.SendPropertyChanged("VisibleRTFText");
					this.OnVisibleRTFTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorComment", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string EditorComment
		{
			get
			{
				return this._EditorComment;
			}
			set
			{
				if ((this._EditorComment != value))
				{
					this.OnEditorCommentChanging(value);
					this.SendPropertyChanging();
					this._EditorComment = value;
					this.SendPropertyChanged("EditorComment");
					this.OnEditorCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase1ReviewApproval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Phase1ReviewApproval
		{
			get
			{
				return this._Phase1ReviewApproval;
			}
			set
			{
				if ((this._Phase1ReviewApproval != value))
				{
					this.OnPhase1ReviewApprovalChanging(value);
					this.SendPropertyChanging();
					this._Phase1ReviewApproval = value;
					this.SendPropertyChanged("Phase1ReviewApproval");
					this.OnPhase1ReviewApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase2ReviewApproval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Phase2ReviewApproval
		{
			get
			{
				return this._Phase2ReviewApproval;
			}
			set
			{
				if ((this._Phase2ReviewApproval != value))
				{
					this.OnPhase2ReviewApprovalChanging(value);
					this.SendPropertyChanging();
					this._Phase2ReviewApproval = value;
					this.SendPropertyChanged("Phase2ReviewApproval");
					this.OnPhase2ReviewApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase3ReviewApproval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Phase3ReviewApproval
		{
			get
			{
				return this._Phase3ReviewApproval;
			}
			set
			{
				if ((this._Phase3ReviewApproval != value))
				{
					this.OnPhase3ReviewApprovalChanging(value);
					this.SendPropertyChanging();
					this._Phase3ReviewApproval = value;
					this.SendPropertyChanged("Phase3ReviewApproval");
					this.OnPhase3ReviewApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phase4ReviewApproval", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Phase4ReviewApproval
		{
			get
			{
				return this._Phase4ReviewApproval;
			}
			set
			{
				if ((this._Phase4ReviewApproval != value))
				{
					this.OnPhase4ReviewApprovalChanging(value);
					this.SendPropertyChanging();
					this._Phase4ReviewApproval = value;
					this.SendPropertyChanged("Phase4ReviewApproval");
					this.OnPhase4ReviewApprovalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer1", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Reviewer1
		{
			get
			{
				return this._Reviewer1;
			}
			set
			{
				if ((this._Reviewer1 != value))
				{
					this.OnReviewer1Changing(value);
					this.SendPropertyChanging();
					this._Reviewer1 = value;
					this.SendPropertyChanged("Reviewer1");
					this.OnReviewer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer2", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Reviewer2
		{
			get
			{
				return this._Reviewer2;
			}
			set
			{
				if ((this._Reviewer2 != value))
				{
					this.OnReviewer2Changing(value);
					this.SendPropertyChanging();
					this._Reviewer2 = value;
					this.SendPropertyChanged("Reviewer2");
					this.OnReviewer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer3", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Reviewer3
		{
			get
			{
				return this._Reviewer3;
			}
			set
			{
				if ((this._Reviewer3 != value))
				{
					this.OnReviewer3Changing(value);
					this.SendPropertyChanging();
					this._Reviewer3 = value;
					this.SendPropertyChanged("Reviewer3");
					this.OnReviewer3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviewer4", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> Reviewer4
		{
			get
			{
				return this._Reviewer4;
			}
			set
			{
				if ((this._Reviewer4 != value))
				{
					this.OnReviewer4Changing(value);
					this.SendPropertyChanging();
					this._Reviewer4 = value;
					this.SendPropertyChanged("Reviewer4");
					this.OnReviewer4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Released", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Released
		{
			get
			{
				return this._Released;
			}
			set
			{
				if ((this._Released != value))
				{
					this.OnReleasedChanging(value);
					this.SendPropertyChanging();
					this._Released = value;
					this.SendPropertyChanged("Released");
					this.OnReleasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisibleText", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string VisibleText
		{
			get
			{
				return this._VisibleText;
			}
			set
			{
				if ((this._VisibleText != value))
				{
					this.OnVisibleTextChanging(value);
					this.SendPropertyChanging();
					this._VisibleText = value;
					this.SendPropertyChanged("VisibleText");
					this.OnVisibleTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongText", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LongText
		{
			get
			{
				return this._LongText;
			}
			set
			{
				if ((this._LongText != value))
				{
					this.OnLongTextChanging(value);
					this.SendPropertyChanging();
					this._LongText = value;
					this.SendPropertyChanged("LongText");
					this.OnLongTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportText", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ReportText
		{
			get
			{
				return this._ReportText;
			}
			set
			{
				if ((this._ReportText != value))
				{
					this.OnReportTextChanging(value);
					this.SendPropertyChanging();
					this._ReportText = value;
					this.SendPropertyChanged("ReportText");
					this.OnReportTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReportTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ReportTypeKey
		{
			get
			{
				return this._ReportTypeKey;
			}
			set
			{
				if ((this._ReportTypeKey != value))
				{
					this.OnReportTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._ReportTypeKey = value;
					this.SendPropertyChanged("ReportTypeKey");
					this.OnReportTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> FormatTypeKey
		{
			get
			{
				return this._FormatTypeKey;
			}
			set
			{
				if ((this._FormatTypeKey != value))
				{
					this.OnFormatTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._FormatTypeKey = value;
					this.SendPropertyChanged("FormatTypeKey");
					this.OnFormatTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DescriptionText
		{
			get
			{
				return this._DescriptionText;
			}
			set
			{
				if ((this._DescriptionText != value))
				{
					this.OnDescriptionTextChanging(value);
					this.SendPropertyChanging();
					this._DescriptionText = value;
					this.SendPropertyChanged("DescriptionText");
					this.OnDescriptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PopUpNoteHTML", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PopUpNoteHTML
		{
			get
			{
				return this._PopUpNoteHTML;
			}
			set
			{
				if ((this._PopUpNoteHTML != value))
				{
					this.OnPopUpNoteHTMLChanging(value);
					this.SendPropertyChanging();
					this._PopUpNoteHTML = value;
					this.SendPropertyChanged("PopUpNoteHTML");
					this.OnPopUpNoteHTMLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextAfterConcept", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string TextAfterConcept
		{
			get
			{
				return this._TextAfterConcept;
			}
			set
			{
				if ((this._TextAfterConcept != value))
				{
					this.OnTextAfterConceptChanging(value);
					this.SendPropertyChanging();
					this._TextAfterConcept = value;
					this.SendPropertyChanged("TextAfterConcept");
					this.OnTextAfterConceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaData", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MetaData
		{
			get
			{
				return this._MetaData;
			}
			set
			{
				if ((this._MetaData != value))
				{
					this.OnMetaDataChanging(value);
					this.SendPropertyChanging();
					this._MetaData = value;
					this.SendPropertyChanged("MetaData");
					this.OnMetaDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FSN", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string FSN
		{
			get
			{
				return this._FSN;
			}
			set
			{
				if ((this._FSN != value))
				{
					this.OnFSNChanging(value);
					this.SendPropertyChanging();
					this._FSN = value;
					this.SendPropertyChanged("FSN");
					this.OnFSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConceptID", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ConceptID
		{
			get
			{
				return this._ConceptID;
			}
			set
			{
				if ((this._ConceptID != value))
				{
					this.OnConceptIDChanging(value);
					this.SendPropertyChanging();
					this._ConceptID = value;
					this.SendPropertyChanged("ConceptID");
					this.OnConceptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GID", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GID
		{
			get
			{
				return this._GID;
			}
			set
			{
				if ((this._GID != value))
				{
					this.OnGIDChanging(value);
					this.SendPropertyChanging();
					this._GID = value;
					this.SendPropertyChanged("GID");
					this.OnGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenericConceptID", DbType="VarChar(20) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string GenericConceptID
		{
			get
			{
				return this._GenericConceptID;
			}
			set
			{
				if ((this._GenericConceptID != value))
				{
					this.OnGenericConceptIDChanging(value);
					this.SendPropertyChanging();
					this._GenericConceptID = value;
					this.SendPropertyChanged("GenericConceptID");
					this.OnGenericConceptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LegacyCode", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LegacyCode
		{
			get
			{
				return this._LegacyCode;
			}
			set
			{
				if ((this._LegacyCode != value))
				{
					this.OnLegacyCodeChanging(value);
					this.SendPropertyChanging();
					this._LegacyCode = value;
					this.SendPropertyChanged("LegacyCode");
					this.OnLegacyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNOMED_MatchTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SNOMED_MatchTypeKey
		{
			get
			{
				return this._SNOMED_MatchTypeKey;
			}
			set
			{
				if ((this._SNOMED_MatchTypeKey != value))
				{
					this.OnSNOMED_MatchTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._SNOMED_MatchTypeKey = value;
					this.SendPropertyChanged("SNOMED_MatchTypeKey");
					this.OnSNOMED_MatchTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNOMED_NeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SNOMED_NeedsReview
		{
			get
			{
				return this._SNOMED_NeedsReview;
			}
			set
			{
				if ((this._SNOMED_NeedsReview != value))
				{
					this.OnSNOMED_NeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._SNOMED_NeedsReview = value;
					this.SendPropertyChanged("SNOMED_NeedsReview");
					this.OnSNOMED_NeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRepetitions", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MinRepetitions
		{
			get
			{
				return this._MinRepetitions;
			}
			set
			{
				if ((this._MinRepetitions != value))
				{
					this.OnMinRepetitionsChanging(value);
					this.SendPropertyChanging();
					this._MinRepetitions = value;
					this.SendPropertyChanged("MinRepetitions");
					this.OnMinRepetitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRepetitions", DbType="SmallInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<short> MaxRepetitions
		{
			get
			{
				return this._MaxRepetitions;
			}
			set
			{
				if ((this._MaxRepetitions != value))
				{
					this.OnMaxRepetitionsChanging(value);
					this.SendPropertyChanging();
					this._MaxRepetitions = value;
					this.SendPropertyChanged("MaxRepetitions");
					this.OnMaxRepetitionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ItemTypeKey
		{
			get
			{
				return this._ItemTypeKey;
			}
			set
			{
				if ((this._ItemTypeKey != value))
				{
					this.OnItemTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeKey = value;
					this.SendPropertyChanged("ItemTypeKey");
					this.OnItemTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousItemCKey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PreviousItemCKey
		{
			get
			{
				return this._PreviousItemCKey;
			}
			set
			{
				if ((this._PreviousItemCKey != value))
				{
					this.OnPreviousItemCKeyChanging(value);
					this.SendPropertyChanging();
					this._PreviousItemCKey = value;
					this.SendPropertyChanged("PreviousItemCKey");
					this.OnPreviousItemCKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentItemCKey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ParentItemCKey
		{
			get
			{
				return this._ParentItemCKey;
			}
			set
			{
				if ((this._ParentItemCKey != value))
				{
					if (this._ChecklistTemplateItem5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentItemCKeyChanging(value);
					this.SendPropertyChanging();
					this._ParentItemCKey = value;
					this.SendPropertyChanged("ParentItemCKey");
					this.OnParentItemCKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCKey", DbType="Decimal(20,9) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal SourceCKey
		{
			get
			{
				return this._SourceCKey;
			}
			set
			{
				if ((this._SourceCKey != value))
				{
					this.OnSourceCKeyChanging(value);
					this.SendPropertyChanging();
					this._SourceCKey = value;
					this.SendPropertyChanged("SourceCKey");
					this.OnSourceCKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrevChecklistTemplateItemCkey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> PrevChecklistTemplateItemCkey
		{
			get
			{
				return this._PrevChecklistTemplateItemCkey;
			}
			set
			{
				if ((this._PrevChecklistTemplateItemCkey != value))
				{
					this.OnPrevChecklistTemplateItemCkeyChanging(value);
					this.SendPropertyChanging();
					this._PrevChecklistTemplateItemCkey = value;
					this.SendPropertyChanged("PrevChecklistTemplateItemCkey");
					this.OnPrevChecklistTemplateItemCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrigChecklistTemplateItemCkey", DbType="Decimal(20,9) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal OrigChecklistTemplateItemCkey
		{
			get
			{
				return this._OrigChecklistTemplateItemCkey;
			}
			set
			{
				if ((this._OrigChecklistTemplateItemCkey != value))
				{
					if (this._ChecklistTemplateItem4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrigChecklistTemplateItemCkeyChanging(value);
					this.SendPropertyChanging();
					this._OrigChecklistTemplateItemCkey = value;
					this.SendPropertyChanged("OrigChecklistTemplateItemCkey");
					this.OnOrigChecklistTemplateItemCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseCkey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> BaseCkey
		{
			get
			{
				return this._BaseCkey;
			}
			set
			{
				if ((this._BaseCkey != value))
				{
					if (this._ChecklistTemplateItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBaseCkeyChanging(value);
					this.SendPropertyChanging();
					this._BaseCkey = value;
					this.SendPropertyChanged("BaseCkey");
					this.OnBaseCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateInjectionCkey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> TemplateInjectionCkey
		{
			get
			{
				return this._TemplateInjectionCkey;
			}
			set
			{
				if ((this._TemplateInjectionCkey != value))
				{
					this.OnTemplateInjectionCkeyChanging(value);
					this.SendPropertyChanging();
					this._TemplateInjectionCkey = value;
					this.SendPropertyChanged("TemplateInjectionCkey");
					this.OnTemplateInjectionCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubTreeTemplateInjectionCkey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> SubTreeTemplateInjectionCkey
		{
			get
			{
				return this._SubTreeTemplateInjectionCkey;
			}
			set
			{
				if ((this._SubTreeTemplateInjectionCkey != value))
				{
					this.OnSubTreeTemplateInjectionCkeyChanging(value);
					this.SendPropertyChanging();
					this._SubTreeTemplateInjectionCkey = value;
					this.SendPropertyChanged("SubTreeTemplateInjectionCkey");
					this.OnSubTreeTemplateInjectionCkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNOMEDinjectionCID", DbType="BigInt", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<long> SNOMEDinjectionCID
		{
			get
			{
				return this._SNOMEDinjectionCID;
			}
			set
			{
				if ((this._SNOMEDinjectionCID != value))
				{
					this.OnSNOMEDinjectionCIDChanging(value);
					this.SendPropertyChanging();
					this._SNOMEDinjectionCID = value;
					this.SendPropertyChanged("SNOMEDinjectionCID");
					this.OnSNOMEDinjectionCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerDataTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AnswerDataTypeKey
		{
			get
			{
				return this._AnswerDataTypeKey;
			}
			set
			{
				if ((this._AnswerDataTypeKey != value))
				{
					this.OnAnswerDataTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._AnswerDataTypeKey = value;
					this.SendPropertyChanged("AnswerDataTypeKey");
					this.OnAnswerDataTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerMaxChars", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AnswerMaxChars
		{
			get
			{
				return this._AnswerMaxChars;
			}
			set
			{
				if ((this._AnswerMaxChars != value))
				{
					this.OnAnswerMaxCharsChanging(value);
					this.SendPropertyChanging();
					this._AnswerMaxChars = value;
					this.SendPropertyChanged("AnswerMaxChars");
					this.OnAnswerMaxCharsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerMaxDecimals", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> AnswerMaxDecimals
		{
			get
			{
				return this._AnswerMaxDecimals;
			}
			set
			{
				if ((this._AnswerMaxDecimals != value))
				{
					this.OnAnswerMaxDecimalsChanging(value);
					this.SendPropertyChanging();
					this._AnswerMaxDecimals = value;
					this.SendPropertyChanged("AnswerMaxDecimals");
					this.OnAnswerMaxDecimalsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerMaxValue", DbType="Decimal(18,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AnswerMaxValue
		{
			get
			{
				return this._AnswerMaxValue;
			}
			set
			{
				if ((this._AnswerMaxValue != value))
				{
					this.OnAnswerMaxValueChanging(value);
					this.SendPropertyChanging();
					this._AnswerMaxValue = value;
					this.SendPropertyChanged("AnswerMaxValue");
					this.OnAnswerMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerMinValue", DbType="Decimal(18,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> AnswerMinValue
		{
			get
			{
				return this._AnswerMinValue;
			}
			set
			{
				if ((this._AnswerMinValue != value))
				{
					this.OnAnswerMinValueChanging(value);
					this.SendPropertyChanging();
					this._AnswerMinValue = value;
					this.SendPropertyChanged("AnswerMinValue");
					this.OnAnswerMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerUnits", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string AnswerUnits
		{
			get
			{
				return this._AnswerUnits;
			}
			set
			{
				if ((this._AnswerUnits != value))
				{
					this.OnAnswerUnitsChanging(value);
					this.SendPropertyChanging();
					this._AnswerUnits = value;
					this.SendPropertyChanged("AnswerUnits");
					this.OnAnswerUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeepWithNext", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool KeepWithNext
		{
			get
			{
				return this._KeepWithNext;
			}
			set
			{
				if ((this._KeepWithNext != value))
				{
					this.OnKeepWithNextChanging(value);
					this.SendPropertyChanging();
					this._KeepWithNext = value;
					this.SendPropertyChanged("KeepWithNext");
					this.OnKeepWithNextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityRequired", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool AuthorityRequired
		{
			get
			{
				return this._AuthorityRequired;
			}
			set
			{
				if ((this._AuthorityRequired != value))
				{
					this.OnAuthorityRequiredChanging(value);
					this.SendPropertyChanging();
					this._AuthorityRequired = value;
					this.SendPropertyChanged("AuthorityRequired");
					this.OnAuthorityRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Required", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Required
		{
			get
			{
				return this._Required;
			}
			set
			{
				if ((this._Required != value))
				{
					this.OnRequiredChanging(value);
					this.SendPropertyChanging();
					this._Required = value;
					this.SendPropertyChanged("Required");
					this.OnRequiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultDisabled", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DefaultDisabled
		{
			get
			{
				return this._DefaultDisabled;
			}
			set
			{
				if ((this._DefaultDisabled != value))
				{
					this.OnDefaultDisabledChanging(value);
					this.SendPropertyChanging();
					this._DefaultDisabled = value;
					this.SendPropertyChanged("DefaultDisabled");
					this.OnDefaultDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hidden", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Hidden
		{
			get
			{
				return this._Hidden;
			}
			set
			{
				if ((this._Hidden != value))
				{
					this.OnHiddenChanging(value);
					this.SendPropertyChanging();
					this._Hidden = value;
					this.SendPropertyChanged("Hidden");
					this.OnHiddenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Locked", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool Locked
		{
			get
			{
				return this._Locked;
			}
			set
			{
				if ((this._Locked != value))
				{
					this.OnLockedChanging(value);
					this.SendPropertyChanging();
					this._Locked = value;
					this.SendPropertyChanged("Locked");
					this.OnLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string DefaultValue
		{
			get
			{
				return this._DefaultValue;
			}
			set
			{
				if ((this._DefaultValue != value))
				{
					this.OnDefaultValueChanging(value);
					this.SendPropertyChanging();
					this._DefaultValue = value;
					this.SendPropertyChanged("DefaultValue");
					this.OnDefaultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorityValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AuthorityValue
		{
			get
			{
				return this._AuthorityValue;
			}
			set
			{
				if ((this._AuthorityValue != value))
				{
					this.OnAuthorityValueChanging(value);
					this.SendPropertyChanging();
					this._AuthorityValue = value;
					this.SendPropertyChanged("AuthorityValue");
					this.OnAuthorityValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkipConcept", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SkipConcept
		{
			get
			{
				return this._SkipConcept;
			}
			set
			{
				if ((this._SkipConcept != value))
				{
					this.OnSkipConceptChanging(value);
					this.SendPropertyChanging();
					this._SkipConcept = value;
					this.SendPropertyChanged("SkipConcept");
					this.OnSkipConceptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlTypeKey
		{
			get
			{
				return this._ControlTypeKey;
			}
			set
			{
				if ((this._ControlTypeKey != value))
				{
					this.OnControlTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._ControlTypeKey = value;
					this.SendPropertyChanged("ControlTypeKey");
					this.OnControlTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTip", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlTip
		{
			get
			{
				return this._ControlTip;
			}
			set
			{
				if ((this._ControlTip != value))
				{
					this.OnControlTipChanging(value);
					this.SendPropertyChanging();
					this._ControlTip = value;
					this.SendPropertyChanged("ControlTip");
					this.OnControlTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionDisablesChildren", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SelectionDisablesChildren
		{
			get
			{
				return this._SelectionDisablesChildren;
			}
			set
			{
				if ((this._SelectionDisablesChildren != value))
				{
					this.OnSelectionDisablesChildrenChanging(value);
					this.SendPropertyChanging();
					this._SelectionDisablesChildren = value;
					this.SendPropertyChanged("SelectionDisablesChildren");
					this.OnSelectionDisablesChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelectionDisablesSiblings", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool SelectionDisablesSiblings
		{
			get
			{
				return this._SelectionDisablesSiblings;
			}
			set
			{
				if ((this._SelectionDisablesSiblings != value))
				{
					this.OnSelectionDisablesSiblingsChanging(value);
					this.SendPropertyChanging();
					this._SelectionDisablesSiblings = value;
					this.SendPropertyChanged("SelectionDisablesSiblings");
					this.OnSelectionDisablesSiblingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDependencyType", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ItemDependencyType
		{
			get
			{
				return this._ItemDependencyType;
			}
			set
			{
				if ((this._ItemDependencyType != value))
				{
					this.OnItemDependencyTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemDependencyType = value;
					this.SendPropertyChanged("ItemDependencyType");
					this.OnItemDependencyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemXValues", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ItemXValues
		{
			get
			{
				return this._ItemXValues;
			}
			set
			{
				if ((this._ItemXValues != value))
				{
					this.OnItemXValuesChanging(value);
					this.SendPropertyChanging();
					this._ItemXValues = value;
					this.SendPropertyChanged("ItemXValues");
					this.OnItemXValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemYKeys", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ItemYKeys
		{
			get
			{
				return this._ItemYKeys;
			}
			set
			{
				if ((this._ItemYKeys != value))
				{
					this.OnItemYKeysChanging(value);
					this.SendPropertyChanging();
					this._ItemYKeys = value;
					this.SendPropertyChanged("ItemYKeys");
					this.OnItemYKeysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationRule", DbType="VarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValidationRule
		{
			get
			{
				return this._ValidationRule;
			}
			set
			{
				if ((this._ValidationRule != value))
				{
					this.OnValidationRuleChanging(value);
					this.SendPropertyChanging();
					this._ValidationRule = value;
					this.SendPropertyChanged("ValidationRule");
					this.OnValidationRuleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValidationText
		{
			get
			{
				return this._ValidationText;
			}
			set
			{
				if ((this._ValidationText != value))
				{
					this.OnValidationTextChanging(value);
					this.SendPropertyChanging();
					this._ValidationText = value;
					this.SendPropertyChanged("ValidationText");
					this.OnValidationTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValidationFunction", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ValidationFunction
		{
			get
			{
				return this._ValidationFunction;
			}
			set
			{
				if ((this._ValidationFunction != value))
				{
					this.OnValidationFunctionChanging(value);
					this.SendPropertyChanging();
					this._ValidationFunction = value;
					this.SendPropertyChanged("ValidationFunction");
					this.OnValidationFunctionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_ItemNum", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> NAACCR_ItemNum
		{
			get
			{
				return this._NAACCR_ItemNum;
			}
			set
			{
				if ((this._NAACCR_ItemNum != value))
				{
					this.OnNAACCR_ItemNumChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_ItemNum = value;
					this.SendPropertyChanged("NAACCR_ItemNum");
					this.OnNAACCR_ItemNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_ItemName", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NAACCR_ItemName
		{
			get
			{
				return this._NAACCR_ItemName;
			}
			set
			{
				if ((this._NAACCR_ItemName != value))
				{
					this.OnNAACCR_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_ItemName = value;
					this.SendPropertyChanged("NAACCR_ItemName");
					this.OnNAACCR_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_DisplayName", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NAACCR_DisplayName
		{
			get
			{
				return this._NAACCR_DisplayName;
			}
			set
			{
				if ((this._NAACCR_DisplayName != value))
				{
					this.OnNAACCR_DisplayNameChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_DisplayName = value;
					this.SendPropertyChanged("NAACCR_DisplayName");
					this.OnNAACCR_DisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_AnswerValue", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NAACCR_AnswerValue
		{
			get
			{
				return this._NAACCR_AnswerValue;
			}
			set
			{
				if ((this._NAACCR_AnswerValue != value))
				{
					this.OnNAACCR_AnswerValueChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_AnswerValue = value;
					this.SendPropertyChanged("NAACCR_AnswerValue");
					this.OnNAACCR_AnswerValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_AnswerKey", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NAACCR_AnswerKey
		{
			get
			{
				return this._NAACCR_AnswerKey;
			}
			set
			{
				if ((this._NAACCR_AnswerKey != value))
				{
					this.OnNAACCR_AnswerKeyChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_AnswerKey = value;
					this.SendPropertyChanged("NAACCR_AnswerKey");
					this.OnNAACCR_AnswerKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_AnswerText", DbType="VarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NAACCR_AnswerText
		{
			get
			{
				return this._NAACCR_AnswerText;
			}
			set
			{
				if ((this._NAACCR_AnswerText != value))
				{
					this.OnNAACCR_AnswerTextChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_AnswerText = value;
					this.SendPropertyChanged("NAACCR_AnswerText");
					this.OnNAACCR_AnswerTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAACCR_TempKey", DbType="Decimal(20,9)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> NAACCR_TempKey
		{
			get
			{
				return this._NAACCR_TempKey;
			}
			set
			{
				if ((this._NAACCR_TempKey != value))
				{
					this.OnNAACCR_TempKeyChanging(value);
					this.SendPropertyChanging();
					this._NAACCR_TempKey = value;
					this.SendPropertyChanged("NAACCR_TempKey");
					this.OnNAACCR_TempKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtensionGroup", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ExtensionGroup
		{
			get
			{
				return this._ExtensionGroup;
			}
			set
			{
				if ((this._ExtensionGroup != value))
				{
					this.OnExtensionGroupChanging(value);
					this.SendPropertyChanging();
					this._ExtensionGroup = value;
					this.SendPropertyChanged("ExtensionGroup");
					this.OnExtensionGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboBoundColumn", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboBoundColumn
		{
			get
			{
				return this._ComboBoundColumn;
			}
			set
			{
				if ((this._ComboBoundColumn != value))
				{
					this.OnComboBoundColumnChanging(value);
					this.SendPropertyChanging();
					this._ComboBoundColumn = value;
					this.SendPropertyChanged("ComboBoundColumn");
					this.OnComboBoundColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboLimitToList", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboLimitToList
		{
			get
			{
				return this._ComboLimitToList;
			}
			set
			{
				if ((this._ComboLimitToList != value))
				{
					this.OnComboLimitToListChanging(value);
					this.SendPropertyChanging();
					this._ComboLimitToList = value;
					this.SendPropertyChanged("ComboLimitToList");
					this.OnComboLimitToListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboColumnCount", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboColumnCount
		{
			get
			{
				return this._ComboColumnCount;
			}
			set
			{
				if ((this._ComboColumnCount != value))
				{
					this.OnComboColumnCountChanging(value);
					this.SendPropertyChanging();
					this._ComboColumnCount = value;
					this.SendPropertyChanged("ComboColumnCount");
					this.OnComboColumnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboHeader", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboHeader
		{
			get
			{
				return this._ComboHeader;
			}
			set
			{
				if ((this._ComboHeader != value))
				{
					this.OnComboHeaderChanging(value);
					this.SendPropertyChanging();
					this._ComboHeader = value;
					this.SendPropertyChanged("ComboHeader");
					this.OnComboHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboHeaderText", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComboHeaderText
		{
			get
			{
				return this._ComboHeaderText;
			}
			set
			{
				if ((this._ComboHeaderText != value))
				{
					this.OnComboHeaderTextChanging(value);
					this.SendPropertyChanging();
					this._ComboHeaderText = value;
					this.SendPropertyChanged("ComboHeaderText");
					this.OnComboHeaderTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboResizableCols", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboResizableCols
		{
			get
			{
				return this._ComboResizableCols;
			}
			set
			{
				if ((this._ComboResizableCols != value))
				{
					this.OnComboResizableColsChanging(value);
					this.SendPropertyChanging();
					this._ComboResizableCols = value;
					this.SendPropertyChanged("ComboResizableCols");
					this.OnComboResizableColsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboResizableRows", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboResizableRows
		{
			get
			{
				return this._ComboResizableRows;
			}
			set
			{
				if ((this._ComboResizableRows != value))
				{
					this.OnComboResizableRowsChanging(value);
					this.SendPropertyChanging();
					this._ComboResizableRows = value;
					this.SendPropertyChanged("ComboResizableRows");
					this.OnComboResizableRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboListRows", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboListRows
		{
			get
			{
				return this._ComboListRows;
			}
			set
			{
				if ((this._ComboListRows != value))
				{
					this.OnComboListRowsChanging(value);
					this.SendPropertyChanging();
					this._ComboListRows = value;
					this.SendPropertyChanged("ComboListRows");
					this.OnComboListRowsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboListWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboListWidth
		{
			get
			{
				return this._ComboListWidth;
			}
			set
			{
				if ((this._ComboListWidth != value))
				{
					this.OnComboListWidthChanging(value);
					this.SendPropertyChanging();
					this._ComboListWidth = value;
					this.SendPropertyChanged("ComboListWidth");
					this.OnComboListWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboAutoExpand", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ComboAutoExpand
		{
			get
			{
				return this._ComboAutoExpand;
			}
			set
			{
				if ((this._ComboAutoExpand != value))
				{
					this.OnComboAutoExpandChanging(value);
					this.SendPropertyChanging();
					this._ComboAutoExpand = value;
					this.SendPropertyChanged("ComboAutoExpand");
					this.OnComboAutoExpandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol1", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComboCol1
		{
			get
			{
				return this._ComboCol1;
			}
			set
			{
				if ((this._ComboCol1 != value))
				{
					this.OnComboCol1Changing(value);
					this.SendPropertyChanging();
					this._ComboCol1 = value;
					this.SendPropertyChanged("ComboCol1");
					this.OnComboCol1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol2", DbType="NVarChar(800) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComboCol2
		{
			get
			{
				return this._ComboCol2;
			}
			set
			{
				if ((this._ComboCol2 != value))
				{
					this.OnComboCol2Changing(value);
					this.SendPropertyChanging();
					this._ComboCol2 = value;
					this.SendPropertyChanged("ComboCol2");
					this.OnComboCol2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol3", DbType="NVarChar(800) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComboCol3
		{
			get
			{
				return this._ComboCol3;
			}
			set
			{
				if ((this._ComboCol3 != value))
				{
					this.OnComboCol3Changing(value);
					this.SendPropertyChanging();
					this._ComboCol3 = value;
					this.SendPropertyChanged("ComboCol3");
					this.OnComboCol3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol4", DbType="NVarChar(800) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ComboCol4
		{
			get
			{
				return this._ComboCol4;
			}
			set
			{
				if ((this._ComboCol4 != value))
				{
					this.OnComboCol4Changing(value);
					this.SendPropertyChanging();
					this._ComboCol4 = value;
					this.SendPropertyChanged("ComboCol4");
					this.OnComboCol4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol1Width", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboCol1Width
		{
			get
			{
				return this._ComboCol1Width;
			}
			set
			{
				if ((this._ComboCol1Width != value))
				{
					this.OnComboCol1WidthChanging(value);
					this.SendPropertyChanging();
					this._ComboCol1Width = value;
					this.SendPropertyChanged("ComboCol1Width");
					this.OnComboCol1WidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol2Width", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboCol2Width
		{
			get
			{
				return this._ComboCol2Width;
			}
			set
			{
				if ((this._ComboCol2Width != value))
				{
					this.OnComboCol2WidthChanging(value);
					this.SendPropertyChanging();
					this._ComboCol2Width = value;
					this.SendPropertyChanged("ComboCol2Width");
					this.OnComboCol2WidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol3Width", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboCol3Width
		{
			get
			{
				return this._ComboCol3Width;
			}
			set
			{
				if ((this._ComboCol3Width != value))
				{
					this.OnComboCol3WidthChanging(value);
					this.SendPropertyChanging();
					this._ComboCol3Width = value;
					this.SendPropertyChanged("ComboCol3Width");
					this.OnComboCol3WidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComboCol4Width", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ComboCol4Width
		{
			get
			{
				return this._ComboCol4Width;
			}
			set
			{
				if ((this._ComboCol4Width != value))
				{
					this.OnComboCol4WidthChanging(value);
					this.SendPropertyChanging();
					this._ComboCol4Width = value;
					this.SendPropertyChanged("ComboCol4Width");
					this.OnComboCol4WidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelHeight", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelHeight
		{
			get
			{
				return this._LabelHeight;
			}
			set
			{
				if ((this._LabelHeight != value))
				{
					this.OnLabelHeightChanging(value);
					this.SendPropertyChanging();
					this._LabelHeight = value;
					this.SendPropertyChanged("LabelHeight");
					this.OnLabelHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelWidth
		{
			get
			{
				return this._LabelWidth;
			}
			set
			{
				if ((this._LabelWidth != value))
				{
					this.OnLabelWidthChanging(value);
					this.SendPropertyChanging();
					this._LabelWidth = value;
					this.SendPropertyChanged("LabelWidth");
					this.OnLabelWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelLeft", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelLeft
		{
			get
			{
				return this._LabelLeft;
			}
			set
			{
				if ((this._LabelLeft != value))
				{
					this.OnLabelLeftChanging(value);
					this.SendPropertyChanging();
					this._LabelLeft = value;
					this.SendPropertyChanged("LabelLeft");
					this.OnLabelLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelTop", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelTop
		{
			get
			{
				return this._LabelTop;
			}
			set
			{
				if ((this._LabelTop != value))
				{
					this.OnLabelTopChanging(value);
					this.SendPropertyChanging();
					this._LabelTop = value;
					this.SendPropertyChanged("LabelTop");
					this.OnLabelTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelBackColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelBackColor
		{
			get
			{
				return this._LabelBackColor;
			}
			set
			{
				if ((this._LabelBackColor != value))
				{
					this.OnLabelBackColorChanging(value);
					this.SendPropertyChanging();
					this._LabelBackColor = value;
					this.SendPropertyChanged("LabelBackColor");
					this.OnLabelBackColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelBackStyle", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LabelBackStyle
		{
			get
			{
				return this._LabelBackStyle;
			}
			set
			{
				if ((this._LabelBackStyle != value))
				{
					this.OnLabelBackStyleChanging(value);
					this.SendPropertyChanging();
					this._LabelBackStyle = value;
					this.SendPropertyChanged("LabelBackStyle");
					this.OnLabelBackStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelBorderStyle", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LabelBorderStyle
		{
			get
			{
				return this._LabelBorderStyle;
			}
			set
			{
				if ((this._LabelBorderStyle != value))
				{
					this.OnLabelBorderStyleChanging(value);
					this.SendPropertyChanging();
					this._LabelBorderStyle = value;
					this.SendPropertyChanged("LabelBorderStyle");
					this.OnLabelBorderStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelBorderColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelBorderColor
		{
			get
			{
				return this._LabelBorderColor;
			}
			set
			{
				if ((this._LabelBorderColor != value))
				{
					this.OnLabelBorderColorChanging(value);
					this.SendPropertyChanging();
					this._LabelBorderColor = value;
					this.SendPropertyChanged("LabelBorderColor");
					this.OnLabelBorderColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelBorderWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelBorderWidth
		{
			get
			{
				return this._LabelBorderWidth;
			}
			set
			{
				if ((this._LabelBorderWidth != value))
				{
					this.OnLabelBorderWidthChanging(value);
					this.SendPropertyChanging();
					this._LabelBorderWidth = value;
					this.SendPropertyChanged("LabelBorderWidth");
					this.OnLabelBorderWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFont", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LabelFont
		{
			get
			{
				return this._LabelFont;
			}
			set
			{
				if ((this._LabelFont != value))
				{
					this.OnLabelFontChanging(value);
					this.SendPropertyChanging();
					this._LabelFont = value;
					this.SendPropertyChanged("LabelFont");
					this.OnLabelFontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFontBold", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LabelFontBold
		{
			get
			{
				return this._LabelFontBold;
			}
			set
			{
				if ((this._LabelFontBold != value))
				{
					this.OnLabelFontBoldChanging(value);
					this.SendPropertyChanging();
					this._LabelFontBold = value;
					this.SendPropertyChanged("LabelFontBold");
					this.OnLabelFontBoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFontColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> LabelFontColor
		{
			get
			{
				return this._LabelFontColor;
			}
			set
			{
				if ((this._LabelFontColor != value))
				{
					this.OnLabelFontColorChanging(value);
					this.SendPropertyChanging();
					this._LabelFontColor = value;
					this.SendPropertyChanged("LabelFontColor");
					this.OnLabelFontColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFontItalic", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LabelFontItalic
		{
			get
			{
				return this._LabelFontItalic;
			}
			set
			{
				if ((this._LabelFontItalic != value))
				{
					this.OnLabelFontItalicChanging(value);
					this.SendPropertyChanging();
					this._LabelFontItalic = value;
					this.SendPropertyChanged("LabelFontItalic");
					this.OnLabelFontItalicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFontSize", DbType="Decimal(3,1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> LabelFontSize
		{
			get
			{
				return this._LabelFontSize;
			}
			set
			{
				if ((this._LabelFontSize != value))
				{
					this.OnLabelFontSizeChanging(value);
					this.SendPropertyChanging();
					this._LabelFontSize = value;
					this.SendPropertyChanged("LabelFontSize");
					this.OnLabelFontSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelFontUnderline", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool LabelFontUnderline
		{
			get
			{
				return this._LabelFontUnderline;
			}
			set
			{
				if ((this._LabelFontUnderline != value))
				{
					this.OnLabelFontUnderlineChanging(value);
					this.SendPropertyChanging();
					this._LabelFontUnderline = value;
					this.SendPropertyChanged("LabelFontUnderline");
					this.OnLabelFontUnderlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabelTextAlign", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LabelTextAlign
		{
			get
			{
				return this._LabelTextAlign;
			}
			set
			{
				if ((this._LabelTextAlign != value))
				{
					this.OnLabelTextAlignChanging(value);
					this.SendPropertyChanging();
					this._LabelTextAlign = value;
					this.SendPropertyChanged("LabelTextAlign");
					this.OnLabelTextAlignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlDataSource", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlDataSource
		{
			get
			{
				return this._ControlDataSource;
			}
			set
			{
				if ((this._ControlDataSource != value))
				{
					this.OnControlDataSourceChanging(value);
					this.SendPropertyChanging();
					this._ControlDataSource = value;
					this.SendPropertyChanged("ControlDataSource");
					this.OnControlDataSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRowSource", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlRowSource
		{
			get
			{
				return this._ControlRowSource;
			}
			set
			{
				if ((this._ControlRowSource != value))
				{
					this.OnControlRowSourceChanging(value);
					this.SendPropertyChanging();
					this._ControlRowSource = value;
					this.SendPropertyChanged("ControlRowSource");
					this.OnControlRowSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRowSourceType", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlRowSourceType
		{
			get
			{
				return this._ControlRowSourceType;
			}
			set
			{
				if ((this._ControlRowSourceType != value))
				{
					this.OnControlRowSourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ControlRowSourceType = value;
					this.SendPropertyChanged("ControlRowSourceType");
					this.OnControlRowSourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFormat", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlFormat
		{
			get
			{
				return this._ControlFormat;
			}
			set
			{
				if ((this._ControlFormat != value))
				{
					this.OnControlFormatChanging(value);
					this.SendPropertyChanging();
					this._ControlFormat = value;
					this.SendPropertyChanged("ControlFormat");
					this.OnControlFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlName", DbType="NVarChar(80) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlName
		{
			get
			{
				return this._ControlName;
			}
			set
			{
				if ((this._ControlName != value))
				{
					this.OnControlNameChanging(value);
					this.SendPropertyChanging();
					this._ControlName = value;
					this.SendPropertyChanged("ControlName");
					this.OnControlNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlHeight", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlHeight
		{
			get
			{
				return this._ControlHeight;
			}
			set
			{
				if ((this._ControlHeight != value))
				{
					this.OnControlHeightChanging(value);
					this.SendPropertyChanging();
					this._ControlHeight = value;
					this.SendPropertyChanged("ControlHeight");
					this.OnControlHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlWidth
		{
			get
			{
				return this._ControlWidth;
			}
			set
			{
				if ((this._ControlWidth != value))
				{
					this.OnControlWidthChanging(value);
					this.SendPropertyChanging();
					this._ControlWidth = value;
					this.SendPropertyChanged("ControlWidth");
					this.OnControlWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlLeft", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlLeft
		{
			get
			{
				return this._ControlLeft;
			}
			set
			{
				if ((this._ControlLeft != value))
				{
					this.OnControlLeftChanging(value);
					this.SendPropertyChanging();
					this._ControlLeft = value;
					this.SendPropertyChanged("ControlLeft");
					this.OnControlLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTop", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlTop
		{
			get
			{
				return this._ControlTop;
			}
			set
			{
				if ((this._ControlTop != value))
				{
					this.OnControlTopChanging(value);
					this.SendPropertyChanging();
					this._ControlTop = value;
					this.SendPropertyChanged("ControlTop");
					this.OnControlTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlBackColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlBackColor
		{
			get
			{
				return this._ControlBackColor;
			}
			set
			{
				if ((this._ControlBackColor != value))
				{
					this.OnControlBackColorChanging(value);
					this.SendPropertyChanging();
					this._ControlBackColor = value;
					this.SendPropertyChanged("ControlBackColor");
					this.OnControlBackColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlBackStyle", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlBackStyle
		{
			get
			{
				return this._ControlBackStyle;
			}
			set
			{
				if ((this._ControlBackStyle != value))
				{
					this.OnControlBackStyleChanging(value);
					this.SendPropertyChanging();
					this._ControlBackStyle = value;
					this.SendPropertyChanged("ControlBackStyle");
					this.OnControlBackStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlBorderStyle", DbType="NVarChar(25) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ControlBorderStyle
		{
			get
			{
				return this._ControlBorderStyle;
			}
			set
			{
				if ((this._ControlBorderStyle != value))
				{
					this.OnControlBorderStyleChanging(value);
					this.SendPropertyChanging();
					this._ControlBorderStyle = value;
					this.SendPropertyChanged("ControlBorderStyle");
					this.OnControlBorderStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlBorderColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlBorderColor
		{
			get
			{
				return this._ControlBorderColor;
			}
			set
			{
				if ((this._ControlBorderColor != value))
				{
					this.OnControlBorderColorChanging(value);
					this.SendPropertyChanging();
					this._ControlBorderColor = value;
					this.SendPropertyChanged("ControlBorderColor");
					this.OnControlBorderColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlBorderWidth", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlBorderWidth
		{
			get
			{
				return this._ControlBorderWidth;
			}
			set
			{
				if ((this._ControlBorderWidth != value))
				{
					this.OnControlBorderWidthChanging(value);
					this.SendPropertyChanging();
					this._ControlBorderWidth = value;
					this.SendPropertyChanged("ControlBorderWidth");
					this.OnControlBorderWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFont", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string ControlFont
		{
			get
			{
				return this._ControlFont;
			}
			set
			{
				if ((this._ControlFont != value))
				{
					this.OnControlFontChanging(value);
					this.SendPropertyChanging();
					this._ControlFont = value;
					this.SendPropertyChanged("ControlFont");
					this.OnControlFontChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFontBold", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ControlFontBold
		{
			get
			{
				return this._ControlFontBold;
			}
			set
			{
				if ((this._ControlFontBold != value))
				{
					this.OnControlFontBoldChanging(value);
					this.SendPropertyChanging();
					this._ControlFontBold = value;
					this.SendPropertyChanged("ControlFontBold");
					this.OnControlFontBoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFontColor", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlFontColor
		{
			get
			{
				return this._ControlFontColor;
			}
			set
			{
				if ((this._ControlFontColor != value))
				{
					this.OnControlFontColorChanging(value);
					this.SendPropertyChanging();
					this._ControlFontColor = value;
					this.SendPropertyChanged("ControlFontColor");
					this.OnControlFontColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFontItalic", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ControlFontItalic
		{
			get
			{
				return this._ControlFontItalic;
			}
			set
			{
				if ((this._ControlFontItalic != value))
				{
					this.OnControlFontItalicChanging(value);
					this.SendPropertyChanging();
					this._ControlFontItalic = value;
					this.SendPropertyChanged("ControlFontItalic");
					this.OnControlFontItalicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFontSize", DbType="Decimal(3,1)", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> ControlFontSize
		{
			get
			{
				return this._ControlFontSize;
			}
			set
			{
				if ((this._ControlFontSize != value))
				{
					this.OnControlFontSizeChanging(value);
					this.SendPropertyChanging();
					this._ControlFontSize = value;
					this.SendPropertyChanged("ControlFontSize");
					this.OnControlFontSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlFontUnderline", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ControlFontUnderline
		{
			get
			{
				return this._ControlFontUnderline;
			}
			set
			{
				if ((this._ControlFontUnderline != value))
				{
					this.OnControlFontUnderlineChanging(value);
					this.SendPropertyChanging();
					this._ControlFontUnderline = value;
					this.SendPropertyChanged("ControlFontUnderline");
					this.OnControlFontUnderlineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlHelpContextID", DbType="NVarChar(80)", UpdateCheck=UpdateCheck.Never)]
		public string ControlHelpContextID
		{
			get
			{
				return this._ControlHelpContextID;
			}
			set
			{
				if ((this._ControlHelpContextID != value))
				{
					this.OnControlHelpContextIDChanging(value);
					this.SendPropertyChanging();
					this._ControlHelpContextID = value;
					this.SendPropertyChanged("ControlHelpContextID");
					this.OnControlHelpContextIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlRightClickMenu", DbType="NVarChar(80)", UpdateCheck=UpdateCheck.Never)]
		public string ControlRightClickMenu
		{
			get
			{
				return this._ControlRightClickMenu;
			}
			set
			{
				if ((this._ControlRightClickMenu != value))
				{
					this.OnControlRightClickMenuChanging(value);
					this.SendPropertyChanging();
					this._ControlRightClickMenu = value;
					this.SendPropertyChanged("ControlRightClickMenu");
					this.OnControlRightClickMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTag", DbType="NVarChar(80)", UpdateCheck=UpdateCheck.Never)]
		public string ControlTag
		{
			get
			{
				return this._ControlTag;
			}
			set
			{
				if ((this._ControlTag != value))
				{
					this.OnControlTagChanging(value);
					this.SendPropertyChanging();
					this._ControlTag = value;
					this.SendPropertyChanged("ControlTag");
					this.OnControlTagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTabStop", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ControlTabStop
		{
			get
			{
				return this._ControlTabStop;
			}
			set
			{
				if ((this._ControlTabStop != value))
				{
					this.OnControlTabStopChanging(value);
					this.SendPropertyChanging();
					this._ControlTabStop = value;
					this.SendPropertyChanged("ControlTabStop");
					this.OnControlTabStopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTabIndex", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ControlTabIndex
		{
			get
			{
				return this._ControlTabIndex;
			}
			set
			{
				if ((this._ControlTabIndex != value))
				{
					this.OnControlTabIndexChanging(value);
					this.SendPropertyChanging();
					this._ControlTabIndex = value;
					this.SendPropertyChanged("ControlTabIndex");
					this.OnControlTabIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ControlTextAlign", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string ControlTextAlign
		{
			get
			{
				return this._ControlTextAlign;
			}
			set
			{
				if ((this._ControlTextAlign != value))
				{
					this.OnControlTextAlignChanging(value);
					this.SendPropertyChanging();
					this._ControlTextAlign = value;
					this.SendPropertyChanged("ControlTextAlign");
					this.OnControlTextAlignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_MSH", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_MSH
		{
			get
			{
				return this._HL7_MSH;
			}
			set
			{
				if ((this._HL7_MSH != value))
				{
					this.OnHL7_MSHChanging(value);
					this.SendPropertyChanging();
					this._HL7_MSH = value;
					this.SendPropertyChanged("HL7_MSH");
					this.OnHL7_MSHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_ORC", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_ORC
		{
			get
			{
				return this._HL7_ORC;
			}
			set
			{
				if ((this._HL7_ORC != value))
				{
					this.OnHL7_ORCChanging(value);
					this.SendPropertyChanging();
					this._HL7_ORC = value;
					this.SendPropertyChanged("HL7_ORC");
					this.OnHL7_ORCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_OBR", DbType="NVarChar(25)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_OBR
		{
			get
			{
				return this._HL7_OBR;
			}
			set
			{
				if ((this._HL7_OBR != value))
				{
					this.OnHL7_OBRChanging(value);
					this.SendPropertyChanging();
					this._HL7_OBR = value;
					this.SendPropertyChanged("HL7_OBR");
					this.OnHL7_OBRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_OBX_3_Qcode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_OBX_3_Qcode
		{
			get
			{
				return this._HL7_OBX_3_Qcode;
			}
			set
			{
				if ((this._HL7_OBX_3_Qcode != value))
				{
					this.OnHL7_OBX_3_QcodeChanging(value);
					this.SendPropertyChanging();
					this._HL7_OBX_3_Qcode = value;
					this.SendPropertyChanged("HL7_OBX_3_Qcode");
					this.OnHL7_OBX_3_QcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_OBX_5_ACode", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_OBX_5_ACode
		{
			get
			{
				return this._HL7_OBX_5_ACode;
			}
			set
			{
				if ((this._HL7_OBX_5_ACode != value))
				{
					this.OnHL7_OBX_5_ACodeChanging(value);
					this.SendPropertyChanging();
					this._HL7_OBX_5_ACode = value;
					this.SendPropertyChanged("HL7_OBX_5_ACode");
					this.OnHL7_OBX_5_ACodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HL7_OBX_5_1_Text", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string HL7_OBX_5_1_Text
		{
			get
			{
				return this._HL7_OBX_5_1_Text;
			}
			set
			{
				if ((this._HL7_OBX_5_1_Text != value))
				{
					this.OnHL7_OBX_5_1_TextChanging(value);
					this.SendPropertyChanging();
					this._HL7_OBX_5_1_Text = value;
					this.SendPropertyChanged("HL7_OBX_5_1_Text");
					this.OnHL7_OBX_5_1_TextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOINC", DbType="NVarChar(10)", UpdateCheck=UpdateCheck.Never)]
		public string LOINC
		{
			get
			{
				return this._LOINC;
			}
			set
			{
				if ((this._LOINC != value))
				{
					this.OnLOINCChanging(value);
					this.SendPropertyChanging();
					this._LOINC = value;
					this.SendPropertyChanged("LOINC");
					this.OnLOINCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3Morph", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICDO3Morph
		{
			get
			{
				return this._ICDO3Morph;
			}
			set
			{
				if ((this._ICDO3Morph != value))
				{
					this.OnICDO3MorphChanging(value);
					this.SendPropertyChanging();
					this._ICDO3Morph = value;
					this.SendPropertyChanged("ICDO3Morph");
					this.OnICDO3MorphChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3Topo", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICDO3Topo
		{
			get
			{
				return this._ICDO3Topo;
			}
			set
			{
				if ((this._ICDO3Topo != value))
				{
					this.OnICDO3TopoChanging(value);
					this.SendPropertyChanging();
					this._ICDO3Topo = value;
					this.SendPropertyChanged("ICDO3Topo");
					this.OnICDO3TopoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3Grade", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICDO3Grade
		{
			get
			{
				return this._ICDO3Grade;
			}
			set
			{
				if ((this._ICDO3Grade != value))
				{
					this.OnICDO3GradeChanging(value);
					this.SendPropertyChanging();
					this._ICDO3Grade = value;
					this.SendPropertyChanged("ICDO3Grade");
					this.OnICDO3GradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3Behav", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICDO3Behav
		{
			get
			{
				return this._ICDO3Behav;
			}
			set
			{
				if ((this._ICDO3Behav != value))
				{
					this.OnICDO3BehavChanging(value);
					this.SendPropertyChanging();
					this._ICDO3Behav = value;
					this.SendPropertyChanged("ICDO3Behav");
					this.OnICDO3BehavChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3MatchTypeKey", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> ICDO3MatchTypeKey
		{
			get
			{
				return this._ICDO3MatchTypeKey;
			}
			set
			{
				if ((this._ICDO3MatchTypeKey != value))
				{
					this.OnICDO3MatchTypeKeyChanging(value);
					this.SendPropertyChanging();
					this._ICDO3MatchTypeKey = value;
					this.SendPropertyChanged("ICDO3MatchTypeKey");
					this.OnICDO3MatchTypeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3FullTerm", DbType="NVarChar(4000) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICDO3FullTerm
		{
			get
			{
				return this._ICDO3FullTerm;
			}
			set
			{
				if ((this._ICDO3FullTerm != value))
				{
					this.OnICDO3FullTermChanging(value);
					this.SendPropertyChanging();
					this._ICDO3FullTerm = value;
					this.SendPropertyChanged("ICDO3FullTerm");
					this.OnICDO3FullTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICDO3NeedsReview", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool ICDO3NeedsReview
		{
			get
			{
				return this._ICDO3NeedsReview;
			}
			set
			{
				if ((this._ICDO3NeedsReview != value))
				{
					this.OnICDO3NeedsReviewChanging(value);
					this.SendPropertyChanging();
					this._ICDO3NeedsReview = value;
					this.SendPropertyChanged("ICDO3NeedsReview");
					this.OnICDO3NeedsReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICD9", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICD9
		{
			get
			{
				return this._ICD9;
			}
			set
			{
				if ((this._ICD9 != value))
				{
					this.OnICD9Changing(value);
					this.SendPropertyChanging();
					this._ICD9 = value;
					this.SendPropertyChanged("ICD9");
					this.OnICD9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ICD10", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ICD10
		{
			get
			{
				return this._ICD10;
			}
			set
			{
				if ((this._ICD10 != value))
				{
					this.OnICD10Changing(value);
					this.SendPropertyChanging();
					this._ICD10 = value;
					this.SendPropertyChanged("ICD10");
					this.OnICD10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPT", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string CPT
		{
			get
			{
				return this._CPT;
			}
			set
			{
				if ((this._CPT != value))
				{
					this.OnCPTChanging(value);
					this.SendPropertyChanging();
					this._CPT = value;
					this.SendPropertyChanged("CPT");
					this.OnCPTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCPCS", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HCPCS
		{
			get
			{
				return this._HCPCS;
			}
			set
			{
				if ((this._HCPCS != value))
				{
					this.OnHCPCSChanging(value);
					this.SendPropertyChanging();
					this._HCPCS = value;
					this.SendPropertyChanged("HCPCS");
					this.OnHCPCSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ATC", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ATC
		{
			get
			{
				return this._ATC;
			}
			set
			{
				if ((this._ATC != value))
				{
					this.OnATCChanging(value);
					this.SendPropertyChanging();
					this._ATC = value;
					this.SendPropertyChanged("ATC");
					this.OnATCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AHFS", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string AHFS
		{
			get
			{
				return this._AHFS;
			}
			set
			{
				if ((this._AHFS != value))
				{
					this.OnAHFSChanging(value);
					this.SendPropertyChanging();
					this._AHFS = value;
					this.SendPropertyChanged("AHFS");
					this.OnAHFSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USP", DbType="NVarChar(10) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string USP
		{
			get
			{
				return this._USP;
			}
			set
			{
				if ((this._USP != value))
				{
					this.OnUSPChanging(value);
					this.SendPropertyChanging();
					this._USP = value;
					this.SendPropertyChanged("USP");
					this.OnUSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeforeUpdate", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string BeforeUpdate
		{
			get
			{
				return this._BeforeUpdate;
			}
			set
			{
				if ((this._BeforeUpdate != value))
				{
					this.OnBeforeUpdateChanging(value);
					this.SendPropertyChanging();
					this._BeforeUpdate = value;
					this.SendPropertyChanged("BeforeUpdate");
					this.OnBeforeUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AfterUpdate", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string AfterUpdate
		{
			get
			{
				return this._AfterUpdate;
			}
			set
			{
				if ((this._AfterUpdate != value))
				{
					this.OnAfterUpdateChanging(value);
					this.SendPropertyChanging();
					this._AfterUpdate = value;
					this.SendPropertyChanged("AfterUpdate");
					this.OnAfterUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnChange", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnChange
		{
			get
			{
				return this._OnChange;
			}
			set
			{
				if ((this._OnChange != value))
				{
					this.OnOnChangeChanging(value);
					this.SendPropertyChanging();
					this._OnChange = value;
					this.SendPropertyChanged("OnChange");
					this.OnOnChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnNotInList", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnNotInList
		{
			get
			{
				return this._OnNotInList;
			}
			set
			{
				if ((this._OnNotInList != value))
				{
					this.OnOnNotInListChanging(value);
					this.SendPropertyChanging();
					this._OnNotInList = value;
					this.SendPropertyChanged("OnNotInList");
					this.OnOnNotInListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnExit", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnExit
		{
			get
			{
				return this._OnExit;
			}
			set
			{
				if ((this._OnExit != value))
				{
					this.OnOnExitChanging(value);
					this.SendPropertyChanging();
					this._OnExit = value;
					this.SendPropertyChanged("OnExit");
					this.OnOnExitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnEnter", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnEnter
		{
			get
			{
				return this._OnEnter;
			}
			set
			{
				if ((this._OnEnter != value))
				{
					this.OnOnEnterChanging(value);
					this.SendPropertyChanging();
					this._OnEnter = value;
					this.SendPropertyChanged("OnEnter");
					this.OnOnEnterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnGotFocus", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnGotFocus
		{
			get
			{
				return this._OnGotFocus;
			}
			set
			{
				if ((this._OnGotFocus != value))
				{
					this.OnOnGotFocusChanging(value);
					this.SendPropertyChanging();
					this._OnGotFocus = value;
					this.SendPropertyChanged("OnGotFocus");
					this.OnOnGotFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnLostFocus", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnLostFocus
		{
			get
			{
				return this._OnLostFocus;
			}
			set
			{
				if ((this._OnLostFocus != value))
				{
					this.OnOnLostFocusChanging(value);
					this.SendPropertyChanging();
					this._OnLostFocus = value;
					this.SendPropertyChanged("OnLostFocus");
					this.OnOnLostFocusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnClick", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnClick
		{
			get
			{
				return this._OnClick;
			}
			set
			{
				if ((this._OnClick != value))
				{
					this.OnOnClickChanging(value);
					this.SendPropertyChanging();
					this._OnClick = value;
					this.SendPropertyChanged("OnClick");
					this.OnOnClickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnDblClick", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnDblClick
		{
			get
			{
				return this._OnDblClick;
			}
			set
			{
				if ((this._OnDblClick != value))
				{
					this.OnOnDblClickChanging(value);
					this.SendPropertyChanging();
					this._OnDblClick = value;
					this.SendPropertyChanged("OnDblClick");
					this.OnOnDblClickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMouseDown", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnMouseDown
		{
			get
			{
				return this._OnMouseDown;
			}
			set
			{
				if ((this._OnMouseDown != value))
				{
					this.OnOnMouseDownChanging(value);
					this.SendPropertyChanging();
					this._OnMouseDown = value;
					this.SendPropertyChanged("OnMouseDown");
					this.OnOnMouseDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMouseMove", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnMouseMove
		{
			get
			{
				return this._OnMouseMove;
			}
			set
			{
				if ((this._OnMouseMove != value))
				{
					this.OnOnMouseMoveChanging(value);
					this.SendPropertyChanging();
					this._OnMouseMove = value;
					this.SendPropertyChanged("OnMouseMove");
					this.OnOnMouseMoveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnMouseUp", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnMouseUp
		{
			get
			{
				return this._OnMouseUp;
			}
			set
			{
				if ((this._OnMouseUp != value))
				{
					this.OnOnMouseUpChanging(value);
					this.SendPropertyChanging();
					this._OnMouseUp = value;
					this.SendPropertyChanged("OnMouseUp");
					this.OnOnMouseUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnKeyDown", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnKeyDown
		{
			get
			{
				return this._OnKeyDown;
			}
			set
			{
				if ((this._OnKeyDown != value))
				{
					this.OnOnKeyDownChanging(value);
					this.SendPropertyChanging();
					this._OnKeyDown = value;
					this.SendPropertyChanged("OnKeyDown");
					this.OnOnKeyDownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnKeyUp", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnKeyUp
		{
			get
			{
				return this._OnKeyUp;
			}
			set
			{
				if ((this._OnKeyUp != value))
				{
					this.OnOnKeyUpChanging(value);
					this.SendPropertyChanging();
					this._OnKeyUp = value;
					this.SendPropertyChanged("OnKeyUp");
					this.OnOnKeyUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnKeyPress", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OnKeyPress
		{
			get
			{
				return this._OnKeyPress;
			}
			set
			{
				if ((this._OnKeyPress != value))
				{
					this.OnOnKeyPressChanging(value);
					this.SendPropertyChanging();
					this._OnKeyPress = value;
					this.SendPropertyChanged("OnKeyPress");
					this.OnOnKeyPressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpFile", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HelpFile
		{
			get
			{
				return this._HelpFile;
			}
			set
			{
				if ((this._HelpFile != value))
				{
					this.OnHelpFileChanging(value);
					this.SendPropertyChanging();
					this._HelpFile = value;
					this.SendPropertyChanged("HelpFile");
					this.OnHelpFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HTMLHelp", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string HTMLHelp
		{
			get
			{
				return this._HTMLHelp;
			}
			set
			{
				if ((this._HTMLHelp != value))
				{
					this.OnHTMLHelpChanging(value);
					this.SendPropertyChanging();
					this._HTMLHelp = value;
					this.SendPropertyChanged("HTMLHelp");
					this.OnHTMLHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TS", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary TS
		{
			get
			{
				return this._TS;
			}
			set
			{
				if ((this._TS != value))
				{
					this.OnTSChanging(value);
					this.SendPropertyChanging();
					this._TS = value;
					this.SendPropertyChanged("TS");
					this.OnTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeprecatedFlag", DbType="Bit NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public bool DeprecatedFlag
		{
			get
			{
				return this._DeprecatedFlag;
			}
			set
			{
				if ((this._DeprecatedFlag != value))
				{
					this.OnDeprecatedFlagChanging(value);
					this.SendPropertyChanging();
					this._DeprecatedFlag = value;
					this.SendPropertyChanged("DeprecatedFlag");
					this.OnDeprecatedFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeprecatedDate", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> DeprecatedDate
		{
			get
			{
				return this._DeprecatedDate;
			}
			set
			{
				if ((this._DeprecatedDate != value))
				{
					this.OnDeprecatedDateChanging(value);
					this.SendPropertyChanging();
					this._DeprecatedDate = value;
					this.SendPropertyChanged("DeprecatedDate");
					this.OnDeprecatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(30) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem", Storage="_ChecklistTemplateItems", ThisKey="ChecklistTemplateItemCkey", OtherKey="BaseCkey")]
		public EntitySet<ChecklistTemplateItem> ChecklistTemplateItems
		{
			get
			{
				return this._ChecklistTemplateItems;
			}
			set
			{
				this._ChecklistTemplateItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem1", Storage="_ChecklistTemplateItem3", ThisKey="ChecklistTemplateItemCkey", OtherKey="ChecklistTemplateItemCkey", IsUnique=true, IsForeignKey=false)]
		public ChecklistTemplateItem ChecklistTemplateItem3
		{
			get
			{
				return this._ChecklistTemplateItem3.Entity;
			}
			set
			{
				ChecklistTemplateItem previousValue = this._ChecklistTemplateItem3.Entity;
				if (((previousValue != value) 
							|| (this._ChecklistTemplateItem3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChecklistTemplateItem3.Entity = null;
						previousValue.ChecklistTemplateItem2 = null;
					}
					this._ChecklistTemplateItem3.Entity = value;
					if ((value != null))
					{
						value.ChecklistTemplateItem2 = this;
					}
					this.SendPropertyChanged("ChecklistTemplateItem3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem2", Storage="_ChecklistTemplateItems1", ThisKey="ChecklistTemplateItemCkey", OtherKey="OrigChecklistTemplateItemCkey")]
		public EntitySet<ChecklistTemplateItem> ChecklistTemplateItems1
		{
			get
			{
				return this._ChecklistTemplateItems1;
			}
			set
			{
				this._ChecklistTemplateItems1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem3", Storage="_ChecklistTemplateItems2", ThisKey="ChecklistTemplateItemCkey", OtherKey="ParentItemCKey")]
		public EntitySet<ChecklistTemplateItem> ChecklistTemplateItems2
		{
			get
			{
				return this._ChecklistTemplateItems2;
			}
			set
			{
				this._ChecklistTemplateItems2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem", Storage="_ChecklistTemplateItem1", ThisKey="BaseCkey", OtherKey="ChecklistTemplateItemCkey", IsForeignKey=true)]
		public ChecklistTemplateItem ChecklistTemplateItem1
		{
			get
			{
				return this._ChecklistTemplateItem1.Entity;
			}
			set
			{
				ChecklistTemplateItem previousValue = this._ChecklistTemplateItem1.Entity;
				if (((previousValue != value) 
							|| (this._ChecklistTemplateItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChecklistTemplateItem1.Entity = null;
						previousValue.ChecklistTemplateItems.Remove(this);
					}
					this._ChecklistTemplateItem1.Entity = value;
					if ((value != null))
					{
						value.ChecklistTemplateItems.Add(this);
						this._BaseCkey = value.ChecklistTemplateItemCkey;
					}
					else
					{
						this._BaseCkey = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("ChecklistTemplateItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem1", Storage="_ChecklistTemplateItem2", ThisKey="ChecklistTemplateItemCkey", OtherKey="ChecklistTemplateItemCkey", IsForeignKey=true)]
		public ChecklistTemplateItem ChecklistTemplateItem2
		{
			get
			{
				return this._ChecklistTemplateItem2.Entity;
			}
			set
			{
				ChecklistTemplateItem previousValue = this._ChecklistTemplateItem2.Entity;
				if (((previousValue != value) 
							|| (this._ChecklistTemplateItem2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChecklistTemplateItem2.Entity = null;
						previousValue.ChecklistTemplateItem3 = null;
					}
					this._ChecklistTemplateItem2.Entity = value;
					if ((value != null))
					{
						value.ChecklistTemplateItem3 = this;
						this._ChecklistTemplateItemCkey = value.ChecklistTemplateItemCkey;
					}
					else
					{
						this._ChecklistTemplateItemCkey = default(decimal);
					}
					this.SendPropertyChanged("ChecklistTemplateItem2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem2", Storage="_ChecklistTemplateItem4", ThisKey="OrigChecklistTemplateItemCkey", OtherKey="ChecklistTemplateItemCkey", IsForeignKey=true)]
		public ChecklistTemplateItem ChecklistTemplateItem4
		{
			get
			{
				return this._ChecklistTemplateItem4.Entity;
			}
			set
			{
				ChecklistTemplateItem previousValue = this._ChecklistTemplateItem4.Entity;
				if (((previousValue != value) 
							|| (this._ChecklistTemplateItem4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChecklistTemplateItem4.Entity = null;
						previousValue.ChecklistTemplateItems1.Remove(this);
					}
					this._ChecklistTemplateItem4.Entity = value;
					if ((value != null))
					{
						value.ChecklistTemplateItems1.Add(this);
						this._OrigChecklistTemplateItemCkey = value.ChecklistTemplateItemCkey;
					}
					else
					{
						this._OrigChecklistTemplateItemCkey = default(decimal);
					}
					this.SendPropertyChanged("ChecklistTemplateItem4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChecklistTemplateItem_ChecklistTemplateItem3", Storage="_ChecklistTemplateItem5", ThisKey="ParentItemCKey", OtherKey="ChecklistTemplateItemCkey", IsForeignKey=true)]
		public ChecklistTemplateItem ChecklistTemplateItem5
		{
			get
			{
				return this._ChecklistTemplateItem5.Entity;
			}
			set
			{
				ChecklistTemplateItem previousValue = this._ChecklistTemplateItem5.Entity;
				if (((previousValue != value) 
							|| (this._ChecklistTemplateItem5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChecklistTemplateItem5.Entity = null;
						previousValue.ChecklistTemplateItems2.Remove(this);
					}
					this._ChecklistTemplateItem5.Entity = value;
					if ((value != null))
					{
						value.ChecklistTemplateItems2.Add(this);
						this._ParentItemCKey = value.ChecklistTemplateItemCkey;
					}
					else
					{
						this._ParentItemCKey = default(Nullable<decimal>);
					}
					this.SendPropertyChanged("ChecklistTemplateItem5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChecklistTemplateItems(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem1 = this;
		}
		
		private void detach_ChecklistTemplateItems(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem1 = null;
		}
		
		private void attach_ChecklistTemplateItems1(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem4 = this;
		}
		
		private void detach_ChecklistTemplateItems1(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem4 = null;
		}
		
		private void attach_ChecklistTemplateItems2(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem5 = this;
		}
		
		private void detach_ChecklistTemplateItems2(ChecklistTemplateItem entity)
		{
			this.SendPropertyChanging();
			entity.ChecklistTemplateItem5 = null;
		}
	}
}
#pragma warning restore 1591
